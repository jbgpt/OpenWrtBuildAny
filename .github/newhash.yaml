# Workflow name which is showed in GitHub Actions.
name: Build openvpn

on:
  workflow_dispatch:
    inputs:
      force-build:
        description: "Build new ssr push"
        required: false
        default: "true"
      ssh:
        description: "SSH connection to Actions"
        required: false
        default: "false"

env:
  FEEDS_CONF: ssr/feeds.conf.default
  REPO_NAME: openwrt-name
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: openwrt-24.10
  BUILD_DEPENDS: |
    ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential
    bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext
    gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386
    libelf-dev libwayland-dev libgraphene-1.0-dev libgl1-mesa-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev
    libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev
    libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch
    pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils
    rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim
    wget xmlto xxd zlib1g-dev clang file nano aria2
  CONFIG_FILE: ssr/clashax.config
  CUSTOM_SCRIPT_1: example-custom-script-1.sh
  CUSTOM_SCRIPT_2: example-custom-script-2.sh
  STORE_PRODUCTS: false
  STORE_FIRMWARE: true
  COWTRANSFER_FIRMWARE: false
  WETRANSFER_FIRMWARE: false
  RELEASE_FIRMWARE: true
  TIME_ZONE: Asia/Shanghai

jobs:
  check:
    name: Check for source code updates
    runs-on: ubuntu-latest

    steps:
      - name: Clone source code
        run: |
          git clone --depth 1 --branch $REPO_BRANCH --single-branch $REPO_URL .
          echo "Commit Hash: $(git rev-parse HEAD)"
          echo "Current Tag: $(git describe --tags)"

  build:
    name: Build firmware
    runs-on: ubuntu-22.04
    needs: check
    permissions:
      contents: write
    if: github.event.inputs.force-build == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Free disk space
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false

      - name: Enable BBR
        run: |
           echo "CONFIG_PACKAGE_kmod-tcp-bbr=y" >> ${{ env.CONFIG_FILE }}
           echo "CONFIG_DEFAULT_TCP_CONG=\"bbr\"" >> ${{ env.CONFIG_FILE }}
           echo "CONFIG_PACKAGE_kmod-sched-core=y" >> ${{ env.CONFIG_FILE }}
           echo "CONFIG_PACKAGE_kmod-sched-fq_codel=y" >> ${{ env.CONFIG_FILE }}

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $BUILD_DEPENDS
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone $TIME_ZONE
          sudo mkdir -p /workdir/
          sudo chown $USER:$GROUPS /workdir/

      - name: Clone source code
        working-directory: /workdir
        run: |
          git clone --depth 1 --branch $REPO_BRANCH --single-branch $REPO_URL openwrt/
          ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

      - name: Run custom-script-1
        run: |
          [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
          chmod +x $CUSTOM_SCRIPT_1
          cd openwrt/
          $GITHUB_WORKSPACE/$CUSTOM_SCRIPT_1

      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [ -e files ] && mv files/ openwrt/files/
          [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

      - name: Run custom-script-2
        run: |
          chmod +x $CUSTOM_SCRIPT_2
          cd openwrt/
          $GITHUB_WORKSPACE/$CUSTOM_SCRIPT_2

      - name: Compile the firmware
        run: |
          cd openwrt/
          make -j$(nproc) || make -j1 || make -j1 V=s
